managed;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for Z_I_TRAVEL_KLFT alias Travel
implementation in class zbp_i_travel_klft unique
persistent table ztb_travel_klft
with additional save
lock master
authorization master ( instance )
etag master LastChangedAt
{
  // Campos administrativos
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy;
  // Campos obligatorios
  field ( mandatory : create ) TravelID, AgencyID, OverallStatus, BookingFee, CurrencyCode;
  // Campos dinamicos
  field ( features : instance ) TravelID;
  field ( features : instance ) OverallStatus;
  //  field ( numbering : managed ) TravelID;

  create;
  update;
  delete;

  // Validaciones
  validation validateCustomer on save { create; field CustomerID; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation status on save { create; field OverallStatus; }

  // Acciones
  action createTravelByTemplate result [1] $self;
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  //  field ( readonly ) TravelID;
  association _Booking { create ( features : instance ); }

  //  Mapeo
  mapping for ztb_travel_klft
    {
      TravelID      = travel_id;
      AgencyID      = agency_id;
      CustomerID    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }
}

define behavior for Z_I_BOOKING_KLFT alias Booking
implementation in class zbp_i_BOOKING_klft unique
persistent table ztb_booking_klft
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  field ( readonly ) TravelId;
  field ( mandatory : create ) BookingID, CarrierId, ConnectionId, FlightDate, BookingStatus;
  update;
  delete;

  // Validaciones
  validation validateStatus on save { field BookingStatus; }

  // Determinaciones
  determination calculateTotalFlightPrice on modify { field FlightPrice, CurrencyCode; }

  association _Travel;
  association _Booksup { create; }

  // Mapeo
  mapping for ztb_booking_klft
    {
      TravelID      = travel_id;
      BookingID     = booking_id;
      BookingDate   = booking_date;
      CustomerID    = customer_id;
      CarrierID     = carrier_id;
      ConnectionID  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
}

define behavior for z_i_booksup_klft alias Supplement
implementation in class zbp_i_booksup_klft unique
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  field ( readonly ) TravelId, BookingID;
  field ( mandatory : create ) BookingSupplementID, Price;
  update;
  delete;

  // Determinaciones
  determination calculateTotalSuppltPrice on modify { field Price, CurrencyCode; }

  association _Travel;
  association _Booking;

  // Mapeo
  mapping for ztb_log_klft corresponding;
}